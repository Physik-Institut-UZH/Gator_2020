//
// File generated by /app/cern/root_v5.34.38/bin/rootcint at Tue Feb 11 16:59:50 2020

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BCMVCUncertaintyDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BCMVCUncertaintyDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void BCMVCUncertainty_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void BCMVCUncertainty_Dictionary();
   static void delete_BCMVCUncertainty(void *p);
   static void deleteArray_BCMVCUncertainty(void *p);
   static void destruct_BCMVCUncertainty(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::BCMVCUncertainty*)
   {
      ::BCMVCUncertainty *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::BCMVCUncertainty),0);
      static ::ROOT::TGenericClassInfo 
         instance("BCMVCUncertainty", "./BCMVCUncertainty.h", 23,
                  typeid(::BCMVCUncertainty), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &BCMVCUncertainty_Dictionary, isa_proxy, 0,
                  sizeof(::BCMVCUncertainty) );
      instance.SetDelete(&delete_BCMVCUncertainty);
      instance.SetDeleteArray(&deleteArray_BCMVCUncertainty);
      instance.SetDestructor(&destruct_BCMVCUncertainty);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::BCMVCUncertainty*)
   {
      return GenerateInitInstanceLocal((::BCMVCUncertainty*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BCMVCUncertainty*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void BCMVCUncertainty_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::BCMVCUncertainty*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_BCMVCUncertainty(void *p) {
      delete ((::BCMVCUncertainty*)p);
   }
   static void deleteArray_BCMVCUncertainty(void *p) {
      delete [] ((::BCMVCUncertainty*)p);
   }
   static void destruct_BCMVCUncertainty(void *p) {
      typedef ::BCMVCUncertainty current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::BCMVCUncertainty

/********************************************************
* BCMVCUncertaintyDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBCMVCUncertaintyDict();

extern "C" void G__set_cpp_environmentBCMVCUncertaintyDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("BCMVCUncertainty.h");
  G__cpp_reset_tagtableBCMVCUncertaintyDict();
}
#include <new>
extern "C" int G__cpp_dllrevBCMVCUncertaintyDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* BCMVCUncertainty */
static int G__BCMVCUncertaintyDict_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BCMVCUncertainty* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new BCMVCUncertainty(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) BCMVCUncertainty(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((BCMVCUncertainty*) G__getstructoffset())->GetName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TMatrixD* pobj;
         TMatrixD xobj = ((BCMVCUncertainty*) G__getstructoffset())->GetCorrelationMatrix();
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TMatrixD* pobj;
         TMatrixD xobj = ((BCMVCUncertainty*) G__getstructoffset())->GetCovarianceMatrix();
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TMatrixD* pobj;
         TMatrixD xobj = ((BCMVCUncertainty*) G__getstructoffset())->GetInvCovarianceMatrix();
         pobj = new TMatrixD(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((BCMVCUncertainty*) G__getstructoffset())->GetFlagActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BCMVCUncertainty*) G__getstructoffset())->SetCorrelationMatrix(*(TMatrixD*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BCMVCUncertainty*) G__getstructoffset())->SetCovarianceMatrix(*(TMatrixT<double>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BCMVCUncertaintyDict_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BCMVCUncertainty*) G__getstructoffset())->SetFlagActive((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BCMVCUncertaintyDict_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BCMVCUncertainty* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BCMVCUncertainty(*(BCMVCUncertainty*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BCMVCUncertainty G__TBCMVCUncertainty;
static int G__BCMVCUncertaintyDict_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BCMVCUncertainty*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BCMVCUncertainty*) (soff+(sizeof(BCMVCUncertainty)*i)))->~G__TBCMVCUncertainty();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BCMVCUncertainty*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BCMVCUncertainty*) (soff))->~G__TBCMVCUncertainty();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BCMVCUncertaintyDict_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BCMVCUncertainty* dest = (BCMVCUncertainty*) G__getstructoffset();
   *dest = *(BCMVCUncertainty*) libp->para[0].ref;
   const BCMVCUncertainty& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* BCMVCUncertainty */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBCMVCUncertaintyDict {
 public:
  G__Sizep2memfuncBCMVCUncertaintyDict(): p(&G__Sizep2memfuncBCMVCUncertaintyDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBCMVCUncertaintyDict::*p)();
};

size_t G__get_sizep2memfuncBCMVCUncertaintyDict()
{
  G__Sizep2memfuncBCMVCUncertaintyDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBCMVCUncertaintyDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBCMVCUncertaintyDict() {

   /* Setting up typedef entry */
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* BCMVCUncertainty */
static void G__setup_memvarBCMVCUncertainty(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty));
   { BCMVCUncertainty *p; p=(BCMVCUncertainty*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_string),-1,-1,4,"fName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"fCorrelationMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"fCovarianceMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"fInvCovarianceMatrix=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fFlagActive=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBCMVCUncertaintyDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBCMVCUncertainty(void) {
   /* BCMVCUncertainty */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty));
   G__memfunc_setup("BCMVCUncertainty",1537,G__BCMVCUncertaintyDict_218_0_1, 105, G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetName",673,G__BCMVCUncertaintyDict_218_0_2, 117, G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrelationMatrix",2071,G__BCMVCUncertaintyDict_218_0_3, 117, G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovarianceMatrix",1936,G__BCMVCUncertaintyDict_218_0_4, 117, G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInvCovarianceMatrix",2237,G__BCMVCUncertaintyDict_218_0_5, 117, G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR), G__defined_typename("TMatrixD"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFlagActive",1270,G__BCMVCUncertaintyDict_218_0_6, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCorrelationMatrix",2083,G__BCMVCUncertaintyDict_218_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' 'TMatrixD' 11 - matrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCovarianceMatrix",1948,G__BCMVCUncertaintyDict_218_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixT<double>' - 11 - matrix", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFlagActive",1282,G__BCMVCUncertaintyDict_218_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - flag", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("BCMVCUncertainty", 1537, G__BCMVCUncertaintyDict_218_0_10, (int) ('i'), G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty), -1, 0, 1, 1, 1, 0, "u 'BCMVCUncertainty' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BCMVCUncertainty", 1663, G__BCMVCUncertaintyDict_218_0_11, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BCMVCUncertaintyDict_218_0_12, (int) ('u'), G__get_linked_tagnum(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty), -1, 1, 1, 1, 1, 0, "u 'BCMVCUncertainty' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBCMVCUncertaintyDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBCMVCUncertaintyDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBCMVCUncertaintyDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BCMVCUncertaintyDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__BCMVCUncertaintyDictLN_BCMVCUncertainty = { "BCMVCUncertainty" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBCMVCUncertaintyDict() {
  G__BCMVCUncertaintyDictLN_string.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__BCMVCUncertaintyDictLN_BCMVCUncertainty.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBCMVCUncertaintyDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_string);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BCMVCUncertaintyDictLN_BCMVCUncertainty),sizeof(BCMVCUncertainty),-1,33792,(char*)NULL,G__setup_memvarBCMVCUncertainty,G__setup_memfuncBCMVCUncertainty);
}
extern "C" void G__cpp_setupBCMVCUncertaintyDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBCMVCUncertaintyDict()");
  G__set_cpp_environmentBCMVCUncertaintyDict();
  G__cpp_setup_tagtableBCMVCUncertaintyDict();

  G__cpp_setup_inheritanceBCMVCUncertaintyDict();

  G__cpp_setup_typetableBCMVCUncertaintyDict();

  G__cpp_setup_memvarBCMVCUncertaintyDict();

  G__cpp_setup_memfuncBCMVCUncertaintyDict();
  G__cpp_setup_globalBCMVCUncertaintyDict();
  G__cpp_setup_funcBCMVCUncertaintyDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBCMVCUncertaintyDict();
  return;
}
class G__cpp_setup_initBCMVCUncertaintyDict {
  public:
    G__cpp_setup_initBCMVCUncertaintyDict() { G__add_setup_func("BCMVCUncertaintyDict",(G__incsetup)(&G__cpp_setupBCMVCUncertaintyDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBCMVCUncertaintyDict() { G__remove_setup_func("BCMVCUncertaintyDict"); }
};
G__cpp_setup_initBCMVCUncertaintyDict G__cpp_setup_initializerBCMVCUncertaintyDict;

