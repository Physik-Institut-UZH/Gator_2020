G4Material *kovar = G4Material::GetMaterial("PMTkovar_mat");

//Define the pmt envelope as a box
const G4double PMT_length = 52 * mm;
const G4double PMT_width = 52 * mm;
const G4double PMT_depth = 16.4 * mm;
	
G4Box* PMT_envel = new G4Box("PMT_envel",0.5*PMT_length,0.5*PMT_width,0.5*PMT_depth);

//Envelope material definition (SS)
G4Material* PMT_steel = new G4Material("PMT_steel",8.03*g/cm3,1);
PMT_steel -> AddMaterial(Steel_304,1.0); //Just a trick to change the name of the steel ==> I can use the routine to generate the random points in the proper material

//Envelope Logical volume
G4LogicalVolume* PMT_envel_log = new G4LogicalVolume(PMT_envel, kovar, "PMT_envel_log", 0, 0, 0);
	
G4VisAttributes* PMT_envel_vis = new G4VisAttributes(red);
PMT_envel_vis -> SetVisibility(true);
PMT_envel_vis -> SetForceSolid(false);
PMT_envel_log -> SetVisAttributes(PMT_envel_vis);

G4ThreeVector KarlPMT_pos(0.,0.,endcapPos_z+0.5*(endcapHeight1+PMT_depth)+0.01*mm);
G4VPhysicalVolume* PMT_envel_phys = new G4PVPlacement(0,KarlPMT_pos,PMT_envel_log,"PMT_envel_phys", cavity1_log, false, 0,true);



/*
//Material definition
//NOTE: Here I represent as a box the folded Tetratex foils, with a density given by the average density. Basically the composition is the same as a PTFE.
G4Material* Tetratex_mat = new G4Material("Tetratex_mat",density=0.297*g/cm3,2);
Tetratex_mat->AddElement(C, 0.240183);
Tetratex_mat->AddElement(F, 0.759817);



//Dimension of sample in box 
G4double Tetratex_x = 100.*mm; //**no const here
G4double Tetratex_y = 150.*mm;
G4double Tetratex_z = 45.*mm;


//Definition of the geometry
G4Box* Tetratex = new G4Box("Tetratex",0.5*Tetratex_x,0.5*Tetratex_y,0.5*Tetratex_z);


//Contruction of logical volume
G4LogicalVolume* Tetratex_log = new G4LogicalVolume(Tetratex,Tetratex_mat,"Tetratex_log", 0, 0, 0);


// Set visibility properties
G4VisAttributes* Tetratex_vis = new G4VisAttributes(red);
Tetratex_vis -> SetVisibility(true);
Tetratex_vis -> SetForceSolid(false);
Tetratex_log -> SetVisAttributes(Tetratex_vis);


//Set the position of the sample in the detector Shift coordinates for the sample placement
G4double TetratexShift_z = endcapPos_z + 0.5*(endcapHeight1+Tetratex_z) + 0.01*mm; //This is the same for each cilinder
G4double TetratexShift_x = 0;
G4double TetratexShift_y = 0;


G4ThreeVector TetratexShift(TetratexShift_x,TetratexShift_y,TetratexShift_z);


G4VPhysicalVolume* Tetratex_phys = new G4PVPlacement(0,TetratexShift,Tetratex_log,"Tetratex_phys",cavity1_log,false,0,true);

*/
